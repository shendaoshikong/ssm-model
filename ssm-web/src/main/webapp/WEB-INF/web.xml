<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee"
         version="2.5">
  <display-name>Archetype Created Web Application</display-name>

  <!--log4j2-begin-->
  <listener>
    <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
  </listener>
  <filter>
    <filter-name>log4jServletFilter</filter-name>
    <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>log4jServletFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
    <dispatcher>ERROR</dispatcher>
  </filter-mapping>
  <!--log4j2-end-->

  <!-- 编码过滤器,解决post乱码 -->
  <filter>
    <filter-name>encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>*.action</url-pattern>
    <!--<url-pattern>/*</url-pattern>-->
  </filter-mapping>

  <!-- 配置加载Spring文件的监听器 -->
  <!--classpath 和 classpaht*的区别
  classpath* 会查找根目录下所有的文件,至到找到匹配文件即可。
  classpath只会在/WEB-INF/classes中查找。-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:spring/ApplicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- springmvc的前端控制器 -->
  <servlet>
    <description>springmvcServlet</description>
    <servlet-name>springMvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--contextConfigLocation不是必须的， 如果不配置contextConfigLocation， springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml" -->
    <init-param>
      <description>springmvcServlet</description>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/springmvc.xml</param-value>
    </init-param>
    <init-param>
      <param-name>activeReverseAjaxEnabled</param-name>
      <param-value>true</param-value>
    </init-param>
    <!-- 配置服务器启动后立即加载Spring MVC配置文件 -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMvc</servlet-name>
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>


  <!--<filter>-->
    <!--<filter-name>SecurityFilter</filter-name>-->
    <!--<filter-class>net.zhsz.util.LoginCheckFilter</filter-class>-->
  <!--</filter>-->

  <!--<filter-mapping>-->
    <!--<filter-name>SecurityFilter</filter-name>-->
    <!--<url-pattern>*.jsp</url-pattern>-->
  <!--</filter-mapping>-->

  <!--<filter-mapping>-->
    <!--<filter-name>SecurityFilter</filter-name>-->
    <!--<url-pattern>/app/*</url-pattern>-->
  <!--</filter-mapping>-->

  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>

  <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/Exception.html</location>
  </error-page>


</web-app>